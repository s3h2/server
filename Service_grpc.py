# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: Service.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import Model_pb2
import Service_pb2


class InfoServiceBase(abc.ABC):

    @abc.abstractmethod
    async def FetchInfo(self, stream: 'grpclib.server.Stream[Model_pb2.Empty, Model_pb2.Info]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateInfo(self, stream: 'grpclib.server.Stream[Model_pb2.Info, Model_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def Offer(self, stream: 'grpclib.server.Stream[Model_pb2.MirrorInfo, Model_pb2.MirrorInfo]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/InfoService/FetchInfo': grpclib.const.Handler(
                self.FetchInfo,
                grpclib.const.Cardinality.UNARY_STREAM,
                Model_pb2.Empty,
                Model_pb2.Info,
            ),
            '/InfoService/UpdateInfo': grpclib.const.Handler(
                self.UpdateInfo,
                grpclib.const.Cardinality.UNARY_UNARY,
                Model_pb2.Info,
                Model_pb2.Empty,
            ),
            '/InfoService/Offer': grpclib.const.Handler(
                self.Offer,
                grpclib.const.Cardinality.UNARY_UNARY,
                Model_pb2.MirrorInfo,
                Model_pb2.MirrorInfo,
            ),
        }


class InfoServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.FetchInfo = grpclib.client.UnaryStreamMethod(
            channel,
            '/InfoService/FetchInfo',
            Model_pb2.Empty,
            Model_pb2.Info,
        )
        self.UpdateInfo = grpclib.client.UnaryUnaryMethod(
            channel,
            '/InfoService/UpdateInfo',
            Model_pb2.Info,
            Model_pb2.Empty,
        )
        self.Offer = grpclib.client.UnaryUnaryMethod(
            channel,
            '/InfoService/Offer',
            Model_pb2.MirrorInfo,
            Model_pb2.MirrorInfo,
        )
